#!/usr/bin/env python
import poplib
import email
import string
import os
import sys
from pyelasticsearch import ElasticSearch
from ConfigParser import SafeConfigParser
from time import localtime, strftime

subdate = strftime("%Y-%m-%dT%H:%M:%S", localtime())

config = "/etc/oplog/oplog.cnf"
if os.path.exists(config):
        parser = SafeConfigParser()
        parser.read(config)
else:
        print "No config file found! Please create: %s" % config
        sys.exit(1)


def usage():
    print "%s [config directive]" % sys.argv[0]
    print "RE: %s default" % sys.argv[0]
    sys.exit()


def removenonascii(s):
    return "".join(i for i in s if ord(i) < 128)


def sanitize(txt):
    txt = txt.replace("&", "&amp;")
    txt = txt.replace('<', '&lt;')
    txt = txt.replace('>', '&gt;')
    txt = txt.replace('"', '&quot;')
    txt = txt.replace("'", "&#039;")
    return txt

input = len(sys.argv)
if input < 2:
    cname = 'default'
else:
    cname = sys.argv[1]

basedir = parser.get('default', 'basedir').strip('"').strip("'")
baseurl = parser.get('default', 'baseurl').strip('"').strip("'")
elasticsearch = parser.get('default', 'elasticsearch').strip('"').strip("'")
gmailuser = parser.get(cname, 'gmailuser').strip('"').strip("'")
gmailpass = parser.get(cname, 'gmailpass').strip('"').strip("'")

attachdir = "%s/attachments/" % basedir
lockfile = "%s/logs/%s-popper.lock" % (basedir, cname)

if os.path.exists(lockfile):
    print "ERROR: found lock %s. Exiting!" % lockfile
    sys.exit()
else:
    with open(lockfile, 'a') as lck:
        os.utime(lockfile, None)
        lck.close()

try:
    queue = parser.get(cname, 'queue').strip('"').strip("'")
except:
    queue = 'ops'

M = poplib.POP3_SSL('pop.googlemail.com', '995')
M.user(gmailuser)
M.pass_(gmailpass)
numMessages = len(M.list()[1])
for i in range(numMessages):
    mail = M.retr(i + 1)
    str = string.join(mail[1], "\n")
    msg = email.message_from_string(str)

    okcontent = ["text/plain", "text/html"]
    if msg.is_multipart():
        counter = 1
        load = ""
        for part in msg.walk():
                # multipart/* are just containers
                if part.get_content_maintype() == 'multipart':
                        continue
                filename = part.get_filename()
                if part.get_content_type() in okcontent:
                        load += part.get_payload()
                        load += "\n"
    else:
        load = removenonascii(msg.get_payload())

    payload = load.rstrip("\n")

    x = {'submitted': subdate, 'sent': msg["Date"], 'from': msg["From"], 'subject': msg["Subject"], 'body': payload}
    es = ElasticSearch(elasticsearch)
    es.index("oplog", queue, x)
M.quit()
os.remove(lockfile)
